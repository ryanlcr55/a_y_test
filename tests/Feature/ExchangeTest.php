<?php

namespace Tests\Feature;

use App\Services\LoadCurrencyInterface;
use Tests\TestCase;

class ExchangeTest extends TestCase
{
    public function setUp(): void
    {

        parent::setUp(); // TODO: Change the autogenerated stub

        $this->mock = $this->mock(LoadCurrencyInterface::class);
        $this->mock->shouldReceive('load')
            ->andReturn([
                "TWD" => [
                    "JPY" => 3.669,
                    "TWD" => 1,
                    "USD" => 0.03281,
                ]
            ]);
    }

    /**
     *
     * @dataProvider exchangeData
     */
    public function test_exchange($attribute, $excepted)
    {
        $response = $this->post('/api/exchange', $attribute);
        $response->assertSuccessful();

        $result = $response->json();
        $this->assertSame($excepted, $result['result']);
    }

    public function test_fail_exchange()
    {
        $response = $this->post('/api/exchange/', [
            'source_currency' => 'XXX',
            'target_currency' => 'TWD',
            'amount' => 10001,
        ]);
        $response->assertStatus(400);
        $result = $response->json();
        $this->assertSame('Source Currency Not Found.', $result['message']);

        $response = $this->post('/api/exchange/', [
            'source_currency' => 'TWD',
            'target_currency' => 'XXX',
            'amount' => 10001,
        ]);
        $response->assertStatus(400);
        $result = $response->json();
        $this->assertSame('Target Currency Not Found.', $result['message']);
    }

    public function exchangeData(): array
    {
        return [
            [
                [
                    'source_currency' => 'TWD',
                    'target_currency' => 'JPY',
                    'amount' => 100001,
                ],
                '366,903.67'
            ],
            [
                [
                    'source_currency' => 'TWD',
                    'target_currency' => 'TWD',
                    'amount' => 100000,
                ],
                '100,000.00'
            ],
            [
                [
                    'source_currency' => 'TWD',
                    'target_currency' => 'USD',
                    'amount' => 100001,
                ],
                '3,281.03'
            ],
        ];
    }
}
